1. 상속

-> 객체간 중복을 해결
-> 상속 관계 객체끼리 형변환 가능
-> 계층 구조를 표현할 수 있음

단점
-> 잘못된 상속은 다른 객체에 큰 영향을 미침
-> 코드가 복잡하고 커지면 중복을 해결할 수 없다.


2. 구성 ( composition ) -> 상속의 단점 보완

-> 객체를 사용해서 또 다른 객체를 만듦 ( 다른 객체에 요청 )

구성 시 다양한 객체를 구성할 수 있는데
객체의 종류가 많아지면 객체를 저장하기 위한 변수가 많이 필요.
-> 비슷한 객체를 그룹화 할 필요가 있음

다양한 객체를 하나의 개념으로 보기 위해 형변환 활용
개, 고양이, 기린, 사자 등의 객체를 동물이라는 하나의 카테고리로 표현가능.
필요에 따라 개를 개로 보거나 동물로 보거나 할 수 있다.

추상메서드 ( 내용이 없는 빈 메서드 )

  - abstract class 클래스 { } // 추상클래스
    abstract void 메서드 ( ) ; // 추상메서드
  